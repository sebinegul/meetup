{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst MeetupDetail = props => {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: props.meetUpData.title\n      })\n    }), /*#__PURE__*/_jsx(MeetupDetails, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      description: props.meetUpData.description,\n      address: props.meetUpData.address\n    })]\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollections = db.collection(\"meetups\");\n  const meetUps = await meetUpCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetUps.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetUpCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetUpData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":null,"metadata":{},"sourceType":"module"}