{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Workspace\\\\React\\\\13-next.js\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst MeetupDetail = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetUpData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      description: props.meetUpData.description,\n      address: props.meetUpData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollections = db.collection(\"meetups\");\n  const meetUps = await meetUpCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetUps.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetUpCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetUpData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["E:/Workspace/React/13-next.js/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","ObjectId","Head","Fragment","MeetupDetail","props","meetUpData","title","image","description","address","getStaticPaths","client","connect","db","meetUpCollections","collection","meetUps","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAD1B;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBG,WAHhC;AAIE,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;AAeA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AADwC,GAA1B,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFZ;AAGVG,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAHd;AAIVF,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAJZ;AAKVC,QAAAA,WAAW,EAAEsB,cAAc,CAACtB;AALlB;AADP;AADF,GAAP;AAWD;AACD,eAAeL,YAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nconst MeetupDetail = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetUpData.title}</title>\r\n      </Head>\r\n      <MeetupDetails\r\n        image={props.meetUpData.image}\r\n        title={props.meetUpData.title}\r\n        description={props.meetUpData.description}\r\n        address={props.meetUpData.address}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollections = db.collection(\"meetups\");\r\n  const meetUps = await meetUpCollections.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetUps.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sebinegul:hx49yuAxHWH3ytmC@cluster0.cgypy.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollections = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetUpCollections.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetUpData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}